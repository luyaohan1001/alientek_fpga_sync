//****************************************Copyright (c)***********************************//
//技术支持：www.openedv.com
//淘宝店铺：http://openedv.taobao.com
//关注微信公众平台微信号："正点原子"，免费获取FPGA & STM32资料。
//版权所有，盗版必究。
//Copyright(C) 正点原子 2018-2028
//All rights reserved
//----------------------------------------------------------------------------------------
// File name:           draw_disp.c
// Last modified Date:  2019/3/6 13:28:14
// Last Version:        V1.0
// Descriptions:        绘制显示界面
//----------------------------------------------------------------------------------------
// Created by:          正点原子
// Created date:        
// Version:             V1.0
// Descriptions:        The original version
//
//----------------------------------------------------------------------------------------
//****************************************************************************************//

#include <unistd.h>
//#include "font.h"
#include "system.h"
#include "draw_disp.h"
#include "GUI.h"
#include "mculcd.h";

extern _disp_dev dispdev;	//界面显示参数
extern _lcd_gui lcdgui;

//绘制显示界面
void Draw_Display(void){
	u16 i= 0;
    GUI_SetBkColor(GUI_BLACK);  	    //设置GUI背景色
    GUI_Clear();                        //GUI清屏

    dispdev.wave_xstart = 16;           //波形起始区域x坐标
    dispdev.wave_ystart = 26;           //波形起始区域y坐标
    dispdev.wave_width = 360;           //波形窗口宽度
    dispdev.wave_height = 224;          //波形窗口高度
    dispdev.set_area_width = lcdgui.width - dispdev.wave_width - dispdev.wave_xstart;

    //绘制波形区域边框
	GUI_SetPenSize(1);                  //设置画笔大小
	GUI_SetColor(GUI_WHITE);            //设置GUI前景色
	GUI_DrawRect(dispdev.wave_xstart,dispdev.wave_ystart,dispdev.wave_xstart + dispdev.wave_width,dispdev.wave_ystart + dispdev.wave_height);  //矩形画线
	GUI_SetColor(GUI_LIGHTDARK);        //设置GUI前景色，亮黑色
	for(i = 1;i < 8;i++){
		if(i == 4)
			continue;
		GUI_DrawLine(dispdev.wave_xstart+1,dispdev.wave_ystart + i*dispdev.wave_height/8,dispdev.wave_xstart + dispdev.wave_width-1,dispdev.wave_ystart+i*dispdev.wave_height/8);
	}
	for(i = 1;i < 10;i++){
		if(i == 5)
			continue;
		GUI_DrawLine(dispdev.wave_xstart+i*dispdev.wave_width/10,dispdev.wave_ystart+1,dispdev.wave_xstart+i*dispdev.wave_width/10,dispdev.wave_ystart+dispdev.wave_height-1);
	}
	//绘制中间区域X轴和Y轴
	GUI_SetColor(GUI_LIGHTGRAY);
	GUI_DrawLine(dispdev.wave_xstart+1,dispdev.wave_ystart + 4*dispdev.wave_height/8,dispdev.wave_xstart + dispdev.wave_width-1,dispdev.wave_ystart+4*dispdev.wave_height/8);
	GUI_DrawLine(dispdev.wave_xstart+5*dispdev.wave_width/10,dispdev.wave_ystart+1,dispdev.wave_xstart+5*dispdev.wave_width/10,dispdev.wave_ystart+dispdev.wave_height-1);

	//绘制右侧设置窗口
	//绘制边框线
	GUI_SetColor(GUI_DARKCYAN);
	GUI_FillRect(lcdgui.width-8*dispdev.set_area_width/5,0,dispdev.wave_xstart+dispdev.wave_width,dispdev.wave_ystart);
	GUI_FillRect(dispdev.wave_xstart+dispdev.wave_width,0,lcdgui.width-1,lcdgui.height-1);
  	GUI_SetColor(GUI_WHITE);
	GUI_DrawRect(lcdgui.width-8*dispdev.set_area_width/5,0,dispdev.wave_xstart+dispdev.wave_width,dispdev.wave_ystart);  //矩形画线
	GUI_DrawRect(dispdev.wave_xstart+dispdev.wave_width,0,lcdgui.width-1,lcdgui.height-1);
	for(i=1;i<7;i++)
	{
		GUI_DrawLine(dispdev.wave_xstart+dispdev.wave_width,i*lcdgui.height/7,lcdgui.width-1,i*lcdgui.height/7);
	}
	GUI_DrawLine(lcdgui.width-dispdev.set_area_width/2,2*lcdgui.height/7,lcdgui.width-dispdev.set_area_width/2,lcdgui.height);
	//绘制设置区域显示字符
	GUI_SetColor(GUI_YELLOW);        //设置GUI前景色
	GUI_SetBkColor(GUI_DARKCYAN);
	GUI_DispStringAt("Edge",lcdgui.width-8*dispdev.set_area_width/5+5,0+5);    //沿变设置


	//绘制界面上方显示区域
	//正点原子
	GUI_SetTextMode(GUI_TM_TRANS);
	GUI_SetColor(GUI_LIGHTGREEN);        //设置GUI前景色
	GUI_SetFont(&GUI_FontChinese_ST16);
	GUI_SetTextAlign(GUI_TA_LEFT | GUI_TA_TOP);
	GUI_DispStringAt("正点原子",16,5);
	//水平分辨率(时间)
	GUI_SetColor(GUI_LIGHTGRAY);
	GUI_DispStringAt("M:500us",110,5);
	//垂直分辨率(电压)
	GUI_DispStringAt("CH:200mV",200,5);

    GUI_SetTextAlign(GUI_TA_HCENTER | GUI_TA_VCENTER);
    GUI_SetTextMode(GUI_TM_NORMAL);
    GUI_SetBkColor(GUI_DARKGREEN);
    GUI_SetColor(GUI_YELLOW);
    GUI_SetFont(&GUI_FontChinese_ST16);
    GUI_DispStringAt("STOP",240,240);

	alt_dcache_flush_all();

}


/*

//读取面板参数
//PG6=R7(M0);PI2=G7(M1);PI7=B7(M2);
//M2:M1:M0
//0 :0 :0	//4.3寸480*272 RGB屏,ID=0X4342
//0 :0 :1	//7寸800*480 RGB屏,ID=0X7084
//0 :1 :0	//7寸1024*600 RGB屏,ID=0X7016
//1 :0 :1	//10.1寸1280*800 RGB屏,ID=0X1018
//返回值:LCD ID:0,非法;其他值,ID;
u16 LTDC_PanelID_Read(void)
{
	u8 idx=0;
	u16 read_data = 0;

	IOWR_ALTERA_AVALON_PIO_DATA(PIO_LCD_DATA_DIR_BASE,0);          // mlcd_data_dir=0 为输入
	delay_ms(50);
	read_data = IORD_ALTERA_AVALON_PIO_DATA(PIO_LCD_DATA_IN_BASE); //获取lcd_data数据
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_LCD_DATA_DIR_BASE,1);          // mlcd_data_dir=0 为输出
	idx=(read_data & 0x8000)>>15;		//读取M0
	idx |= (read_data & 0x0400)>>9;      //读取M1
	idx |= (read_data & 0x0010)>>2;      //读取M2
	switch(idx)
	{
		case 0:return 0X4342;		//4.3寸屏,480*272分辨率
		case 1:return 0X7084;		//7寸屏,800*480分辨率
		case 2:return 0X7016;		//7寸屏,1024*600分辨率
		case 5:return 0X1018; 		//10.1寸屏,1280*800分辨率
		default:return 0;
	}
}
*/
 
